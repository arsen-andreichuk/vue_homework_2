// // –í—ñ–¥–±–∏—Ä–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏
// const input  = document.getElementById('taskInput');
// const button = document.getElementById('taskAdd');
// const list   = document.getElementById('tasksList');

// // –ú–∞—Å–∏–≤ –∑–∞–¥–∞—á
// const tasks = JSON.parse(localStorage.getItem('tasks')) || [];

// // –í–∏–≤–æ–¥–∏–º–æ –∑–∞–¥–∞—á—ñ –≤ —Å–ø–∏—Å–æ–∫
// function renderTasks() {

// 	// –û—á–∏—â—É—î–º–æ —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
// 	list.innerHTML = '';

// 	// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –º–∞—Å–∏–≤–∞ –∑–∞–¥–∞—á –Ω–∞ –ø—É—Å—Ç–æ—Ç—É
// 	if (tasks.length === 0) {

// 		// –í–∏–≤–æ–¥–∏–º–æ —Ç–µ–∫—Å—Ç –ø—É—Å—Ç–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è
// 		list.insertAdjacentHTML('beforeend', '<li class="no-result">–ó–∞–¥–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</li>');
// 	} else {

// 		// –°—Ç–∞—Ç—É—Å–∏ –∑–∞–¥–∞—á—ñ
// 		const statuses = {
// 			new: '–ù–æ–≤–∞ –∑–∞–¥–∞—á–∞',
// 			testing: '–¢–µ—Å—Ç—É—î—Ç—å—Å—è',
// 			done: '–ì–æ—Ç–æ–≤–µ'
// 		};

// 		// –ü–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –º–∞—Å–∏–≤ –∑–∞–¥–∞—á
// 		tasks.forEach(({id, task, status}) => {
			
// 			// –í–∏–≤–æ–¥–∏–º–æ –∑–∞–¥–∞—á—ñ –≤ —Å–ø–∏—Å–æ–∫
// 			list.insertAdjacentHTML('beforeend', `<li draggable="true" data-id="${id}">
// 													<div class="dropdown">
// 														<button class="dropdown-btn" data-status="${status}">${statuses[status]}</button>
// 														<div class="dropdown-content">
// 															<a data-id="${id}" href="new" class="set-status">–ù–æ–≤–∞ –∑–∞–¥–∞—á–∞</a>
// 															<a data-id="${id}" href="testing" class="set-status">–¢–µ—Å—Ç—É—î—Ç—å—Å—è</a>
// 															<a data-id="${id}" href="done" class="set-status">–ì–æ—Ç–æ–≤–µ</a>
// 														</div>
// 													</div>
// 													<input type="text" value="${task}" class="edit" data-id="${id}" readonly>
// 													<button class='save-edit' data-id="${id}">üíæ</button>
// 													<button class='delete' data-id="${id}">&#10006</button>
// 												</li>`);
// 		});
// 	}
// }

// // –í–∏–≤–æ–¥–∏–º–æ –∑–∞–¥–∞—á—ñ –≤ —Å–ø–∏—Å–æ–∫
// renderTasks();

// // –°–ª—ñ–¥–∫—É—î–º–æ –∑–∞ –∫–Ω–æ–ø–∫—é –¥–æ–±–∞–≤–ª–µ–Ω–Ω—è –∑–∞–¥–∞—á—ñ
// button.addEventListener('click', (e) => {

// 	// –î—ñ—Å—Ç–∞—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ –ø–æ–ª—è input
// 	const task = input.value;

// 	// –û—á–∏—â–∞—î–º–æ –ø–æ–ª–µ input
// 	input.value = '';

// 	// –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç –∑–∞–¥–∞—á—ñ
// 	const taskObj = {
// 		id: Date.now(),
// 		task: task,
// 		status: 'new'
// 	};

// 	// –î–æ–±–∞–≤–ª—è—î–º–æ –∑–∞–¥–∞—á—É –¥–æ –º–∞—Å–∏–≤—É 
// 	tasks.push(taskObj);

// 	// –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –º–∞—Å–∏–≤ –∑–∞–¥–∞—á
// 	localStorage.setItem('tasks', JSON.stringify(tasks));
	
// 	// –í–∏–≤–æ–¥–∏–º–æ –∑–∞–¥–∞—á—ñ –≤ —Å–ø–∏—Å–æ–∫
// 	renderTasks();
// })

// // –í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–¥–∞—á—ñ
// function deleteTask(id) {
// 	// –í–∏–≤–æ–¥–∏–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –∫–Ω–æ–ø—Ü—ñ
// 	if(confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–¥–∞—á—É?')) {

// 		// –§–æ—Ä–º—É—î–º–æ –∫–ª—é—á –º–∞—Å–∏–≤–∞
// 		const arrayKey = tasks.findIndex(task => task.id == id);

// 		// –í–∏–¥–∞–ª—é—î–º–æ –∑–∞–¥–∞—á—É –∑ –º–∞—Å–∏–≤—É
// 		tasks.splice(arrayKey, 1);

// 		// –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –º–∞—Å–∏–≤ –∑–∞–¥–∞—á
// 		localStorage.setItem('tasks', JSON.stringify(tasks));

// 		// –í–∏–≤–æ–¥–∏–º–æ –∑–∞–¥–∞—á—ñ –≤ —Å–ø–∏—Å–æ–∫
// 		renderTasks();
// 	}
// }

// // –†–µ–¥–∞–≥—É—î–º–æ –Ω–∞–∑–≤—É –∑–∞–¥–∞—á—ñ
// function editTask(el) {

// 	// –ó–∞–ø–∏—Ç—É—î–º–æ —á–∏ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ –Ω–∞–∑–≤—É –∑–∞–¥–∞—á—ñ
// 	if(confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ –Ω–∞–∑–≤—É –∑–∞–¥–∞—á—ñ?')) {

// 		// –ó–∞–±–∏—Ä–∞—î–º–º–æ –∞—Ç—Ä–∏–±—É—Ç readonly
// 		el.removeAttribute('readonly');

// 		// –í—ñ—à–∞—î–º–æ –∫—É—Ä—Å–æ—Ä—á–∏–∫ –Ω–∞ —Ü–µ–π –µ–ª–µ–º–µ–Ω—Ç
// 		el.classList.add('editing');
		
// 		// –î–æ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –¥–æ–±–∞–≤–ª—è—î–º–æ –∫–ª–∞—Å
// 		el.parentElement.classList.add('editing');
		
// 		// –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å edit
// 		el.classList.remove('edit');
// 	}
// }

// // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω—É –Ω–∞–∑–≤—É –∑–∞–¥–∞—á—ñ
// function saveEditTask(el, id) {

// 	// –í–∏—Ç—è–≥—É—î–º–æ input –∑ data-id
// 	const inputEdit = document.querySelector(`input[data-id="${id}"]`);

// 	// –ó–∞–±–∏—Ä–∞—î–º–º–æ –∞—Ç—Ä–∏–±—É—Ç readonly
// 	inputEdit.setAttribute('readonly', true);
	
// 	// –í—ñ—à–∞—î–º–æ –∫—É—Ä—Å–æ—Ä—á–∏–∫ –Ω–∞ —Ü–µ–π –µ–ª–µ–º–µ–Ω—Ç
// 	inputEdit.classList.remove('editing');
	
// 	// –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å edit
// 	inputEdit.classList.add('edit');

// 	// –î–æ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –¥–æ–±–∞–≤–ª—è—î–º–æ –∫–ª–∞—Å
// 	el.parentElement.classList.remove('editing');
	
// 	// –§–æ—Ä–º—É—î–º–æ –∫–ª—é—á –º–∞—Å–∏–≤–∞
// 	const arrayKey = tasks.findIndex(task => task.id == id);

// 	// –ó–º—ñ–Ω—é—î–º–æ –Ω–∞–∑–≤—É –∑–∞–¥–∞—á—ñ
// 	tasks[arrayKey].task = inputEdit.value;

// 	// –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –º–∞—Å–∏–≤ –∑–∞–¥–∞—á
// 	localStorage.setItem('tasks', JSON.stringify(tasks));
// }

// // –ó–º—ñ–Ω–∞ —Å—Ç–∞—Ç—É—Å—É –∑–∞–¥–∞—á—ñ
// function saveStatusTask(el, id) {	

// 	// –î—ñ—Å—Ç–∞—î–º–æ href –∑ –µ–ª–µ–º–µ–Ω—Ç—É
// 	const status = el.getAttribute('href');
	
// 	// –§–æ—Ä–º—É—î–º–æ –∫–ª—é—á –º–∞—Å–∏–≤–∞
// 	const arrayKey = tasks.findIndex(task => task.id == id);

// 	// –ó–º—ñ–Ω—é—î–º–æ —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á—ñ
// 	tasks[arrayKey].status = status;

// 	// –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –º–∞—Å–∏–≤ –∑–∞–¥–∞—á
// 	localStorage.setItem('tasks', JSON.stringify(tasks));
	
// 	// –í–∏–≤–æ–¥–∏–º–æ –∑–∞–¥–∞—á—ñ –≤ —Å–ø–∏—Å–æ–∫
// 	renderTasks();
// }

// // –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –≤—ñ–¥–Ω–æ—Å–Ω–æ –∑–∞–¥–∞—á—ñ
// list.addEventListener('click', (e) => {

// 	// –û—Ç—Ä–∏–º—É—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –ø–æ —è–∫–æ–º—É –±—É–≤ –∫–ª—ñ–∫
// 	const el = e.target;

// 	// –ó–∞–∑–≤–∏—á–∞–π –ø—Ä–∞—Ü—é—î–º–æ –∑ –¥–∞—Ç–∞ –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏ —Ç–æ–º—É –≤—ñ–¥—Ä–∞–∑—É —ó—Ö —Ç–∞–∫–æ–∂ –æ—Ç—Ä–∏–º–∞—î–º–æ
// 	const data = el.dataset;

// 	// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø—Ü—ñ
// 	if (el.classList.contains('delete')) {

// 		// –í–∏–¥–∞–ª—é—î–º–æ –∑–∞–¥–∞—á—É
// 		deleteTask(data.id);
// 	}

// 	// –†–µ–¥–∞–≥—É—î–º–æ –Ω–∞–∑–≤—É –∑–∞–¥–∞—á—ñ
// 	if (el.classList.contains('edit')) {

// 		// –í–∏–≤–æ–¥–∏–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –∫–Ω–æ–ø—Ü—ñ
// 		editTask(el);
// 	}

// 	// –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω—É –Ω–∞–∑–≤—É –∑–∞–¥–∞—á—ñ –¥–æ –º–∞—Å–∏–≤—É
// 	if (el.classList.contains('save-edit')) {

// 		// –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∑–∞–¥–∞—á—É
// 		saveEditTask(el, data.id);
// 	}

// 	// –ó–º—ñ–Ω–∞ —Å—Ç–∞—Ç—É—Å—É –∑–∞–¥–∞—á—ñ
// 	if (el.classList.contains('set-status')) {
// 		e.preventDefault();

// 		// –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∑–∞–¥–∞—á—É
// 		saveStatusTask(el, data.id);
// 	}
// })


// // –†–æ–±–∏–º–æ drag and drop —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á [ –ø–æ—á–∞—Ç–æ–∫ ]
// list.addEventListener('dragstart', (e) => {
	
// 	// –î–æ–±–∞–≤–ª—è—î–º–æ –∫–ª–∞—Å –¥–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
// 	setTimeout(() => e.target.classList.add('dragging'), 0);
// })

// // –†–æ–±–∏–º–æ drag and drop —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á [ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è ]
// list.addEventListener('dragend', (e) => {
	
// 	// –ó–∞–±–∏—Ä–∞—î–º–æ –∫–ª–∞—Å –ø–æ—Ç–æ—á–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
// 	e.target.classList.remove('dragging');

// 	// –û–Ω–æ–≤–ª—é—î–º–æ –≤ –º–∞—Å–∏–≤—ñ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å –∑–∞–¥–∞—á
// 	const listLi = [...list.querySelectorAll("li")];

// 	// –ù–æ–≤–∏–π –º–∞—Å–∏–≤ –∑–∞–¥–∞—á
// 	const tasksSorting = [];

// 	// –§–æ—Ä–º—É—î–º–æ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤
// 	listLi.forEach(li => {

// 		// –ó–Ω–∞—Ö–æ–¥–∏–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –æ–±'—î–∫—Ç –∑–∞–¥–∞—á—ñ –≤ –º–∞—Å–∏–≤—ñ tasks
// 		const task = tasks.find(task => task.id == li.dataset.id);

// 		// –î–æ–¥–∞—î–º–æ –∑–∞–¥–∞—á—É –¥–æ –Ω–æ–≤–æ–≥–æ –º–∞—Å–∏–≤—É
// 		tasksSorting.push(task);
// 	});

// 	// –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –º–∞—Å–∏–≤ –∑–∞–¥–∞—á
// 	localStorage.setItem('tasks', JSON.stringify(tasksSorting));
// })

// // –†–æ–±–∏–º–æ drag and drop —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á [ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è ]
// list.addEventListener('dragover', (e) => {
//     e.preventDefault();
    
//     // –ü–æ—Ç–æ—á–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç —è–∫–∏–π –ø–µ—Ä–µ—Ç—è–≥—É—î–º–æ
//     let el = e.target;

// 	// –Ø–∫—â–æ –µ–ª–µ–º–µ–Ω—Ç –Ω–µ ul —Ç–æ–¥—ñ –∑–∞–ø—É—Å–∫–∞—î–º–æ –∫–æ–¥
// 	if (el.nodeName != 'ul') {
// 		// –Ø–∫—â–æ –ø–æ—Ç–æ—á–Ω–∞ –Ω–∞–∑–≤–∞ html —Ç–µ–≥–∞ –Ω–µ li —Ç–æ–¥—ñ –±–µ—Ä–µ–º–æ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π –µ–ª–µ–º–µ–Ω—Ç
// 		if (el.nodeName != 'li')
// 			el = el.parentElement;
	
// 		// –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, –æ–∫—Ä—ñ–º –ø–æ—Ç–æ—á–Ω–æ–≥–æ, —Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–∞—Å–∏–≤—É –∑ –Ω–∏—Ö
// 		const listLi = [...list.querySelectorAll("li:not(.dragging)")];
	
// 		// –ï–ª–µ–º–µ–Ω—Ç —ñ—Å–ª—è —è–∫–æ–≥–æ —Å–ª—ñ–¥ —Ä–æ–∑–º—ñ—Å—Ç–∏—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç, —â–æ –ø–µ—Ä–µ—Ç—è–≥—É—î—Ç—å—Å—è
// 		const nextLi = listLi.find(li => {
// 			return e.clientY <= li.offsetTop + li.offsetHeight / 2;
// 		});
		
// 		// Inserting the dragging item before the found sibling
// 		if (typeof nextLi != undefined)
// 			list.insertBefore(el, nextLi);
// 	}
// })

